# Test
name: Development Build
on:
  pull_request:
    branches: [dev]

  push:
    branches: [dev]

# on: workflow_dispatch

jobs:
  backend-unit-tests:
    uses: rropen/reusable-workflows/.github/workflows/pytest.yml@main
    with:
      backend_directory: src/backend

  frontend-unit-tests:
    uses: rropen/reusable-workflows/.github/workflows/cypress_component_tests.yml@main
    with:
      frontend_directory: src/frontend
    secrets:
      vue_cobalt_token: ${{ secrets.VUE_COBALT_PAT }}

  docker-build:
    uses: rropen/reusable-workflows/.github/workflows/docker_build.yml@main
    with:
      dockerfile_directory: src/backend
      image: ghcr.io/rropen/sfm_backend:latest
      registry: ghcr.io
    secrets:
      cr_username: ${{ secrets.GH_CR_USERNAME }}
      cr_PAT: ${{ secrets.CONTAINER_PAT }}

  integration-tests:
    needs: [docker-build, backend-unit-tests, frontend-unit-tests]
    uses: rropen/reusable-workflows/.github/workflows/cypress_E2E.yml@main
    with:
      backend_directory: src/backend
      frontend_directory: src/frontend
      backend_url: http://localhost:8181
      image: ghcr.io/rropen/sfm_backend:latest
    secrets:
      vue_cobalt_token: ${{ secrets.VUE_COBALT_PAT }}
      cr_username: ${{ secrets.GH_CR_USERNAME }}
      cr_PAT: ${{ secrets.CONTAINER_PAT }}

  #   codeQL:
  #     needs: integration-tests
  #     uses: rropen/reusable-workflows/.github/workflows/codeQL.yml@main
  #     with:
  #       language: python

  snyk-vulnerability-scanning:
    needs: integration-tests
    uses: rropen/reusable-workflows/.github/workflows/snyk_vulnerability_scanning.yml@main
    secrets:
      snyk_token: ${{secrets.SNYK_TOKEN}}

  snyk-docker-vulnerability-scanning:
    needs: integration-tests
    uses: rropen/reusable-workflows/.github/workflows/snyk_docker_vulnerability_scanning.yml@main
    with:
      image: ghcr.io/rropen/sfm_backend:latest
      dockerfile_directory: src/backend
    secrets:
      snyk_token: ${{secrets.SNYK_TOKEN}}
      cr_username: ${{ secrets.GH_CR_USERNAME }}
      cr_PAT: ${{ secrets.CONTAINER_PAT }}

  backend-build-deploy-azure:
    needs: [snyk-docker-vulnerability-scanning, snyk-vulnerability-scanning]
    uses: rropen/reusable-workflows/.github/workflows/docker_deploy_azure.yml@main
    with:
      dockerfile_directory: src/backend
      GH_image: ghcr.io/rropen/sfm_backend:latest
    secrets:
      AZ_image: ${{ secrets.IMAGE_BACKEND_DEV }}
      crsft_login_server: ${{ secrets.CRSFT_LOGIN_SERVER }}
      crsft_username: ${{ secrets.CRSFT_USERNAME }}
      crsft_password: ${{ secrets.CRSFT_PASSWORD }}
      cr_username: ${{ secrets.GH_CR_USERNAME }}
      cr_PAT: ${{ secrets.CONTAINER_PAT }}

  frontend-build-deploy-azure:
    needs: [snyk-docker-vulnerability-scanning, snyk-vulnerability-scanning]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: Login ACR
        uses: azure/docker-login@v1
        with:
          login-server: ${{ secrets.CRSFT_LOGIN_SERVER }}
          username: ${{ secrets.CRSFT_USERNAME}}
          password: ${{ secrets.CRSFT_PASSWORD }}
      - name: Build/Push Frontend Container
        run: |
          docker build --build-arg NODE_AUTH_TOKEN=${{ secrets.VUE_COBALT_PAT }} -t ${{ secrets.IMAGE_FRONTEND_DEV }} src/frontend
          docker push ${{ secrets.IMAGE_FRONTEND_DEV }}
