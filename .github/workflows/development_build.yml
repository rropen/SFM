name: Development Build
# on:
#   pull_request:
#     branches: [dev]

#   push:
#     branches: [dev]

on: workflow_dispatch

# jobs:
#   Unit-Tests:
#     runs-on: ubuntu-latest
#     steps:
#       - name: Checkout Code
#         uses: actions/checkout@v2

#       - name: Set up Python 3.9
#         uses: actions/setup-python@v2
#         with:
#           python-version: 3.9

#       - uses: actions/cache@v2
#         with:
#           path: ${{ env.pythonLocation }}
#           key: ${{ env.pythonLocation }}-${{ hashFiles('setup.py') }}-${{ hashFiles('requirements.txt') }}

#       - name: Install dependencies
#         working-directory: src/backend
#         run: |
#           python -m pip install --upgrade pip
#           pip install pytest
#           if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
#       - name: Pytest Unit Tests
#         run: |
#           pytest
        
#   Component-Tests:
#     runs-on: ubuntu-latest
#     steps:
#     - name: Checkout Code
#       uses: actions/checkout@v2

#     - name: Setup Node
#       uses: actions/setup-node@v2
#       with:
#         node-version: "14"

#     - name: Get yarn cache directory path
#       id: yarn-cache-dir-path
#       run: echo "::set-output name=dir::$(yarn cache dir)"

#     - uses: actions/cache@v2
#       id: yarn-cache
#       with:
#         path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
#         key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
#         restore-keys: |
#           ${{ runner.os }}-yarn-
          
#     - name: Install Dependencies
#       working-directory: src/frontend
#       run: yarn --prefer-offline

#     - name: Cypress Integration Tests
#       working-directory: src/frontend
#       run: yarn cy-ct
      
  Integration-Tests:
#     needs: Component-Tests
    runs-on: ubuntu-latest

    steps:
    - name: Set up Python 3.9
      uses: actions/setup-python@v2
      with:
        python-version: 3.9

    - uses: actions/cache@v2
      with:
        path: ${{ env.pythonLocation }}
        key: ${{ env.pythonLocation }}-${{ hashFiles('setup.py') }}-${{ hashFiles('requirements.txt') }}

    - name: Install dependencies
      working-directory: src/backend
      run: |
        python -m pip install --upgrade pip
        pip install pytest
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    - name: Pytest Unit Tests
      run: |
        uvicorn sfm.main:app --workers 4 --host 0.0.0.0 --port 8181 --reload

    - name: Setup Node
      uses: actions/setup-node@v2
      with:
        node-version: "14"

    - name: Get yarn cache directory path
      id: yarn-cache-dir-path
      run: echo "::set-output name=dir::$(yarn cache dir)"

    - uses: actions/cache@v2
      id: yarn-cache
      with:
        path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
        key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
        restore-keys: |
          ${{ runner.os }}-yarn-
          
    - name: Install Dependencies
      working-directory: src/frontend
      run: yarn --prefer-offline

    - name: Cypress Integration Tests
      working-directory: src/frontend
      run: yarn cy
      
#   Code-QL:
#     name: Code QL
#     runs-on: ubuntu-latest
#     permissions:
#       actions: read
#       contents: read
#       security-events: write

#     strategy:
#       fail-fast: false
#       matrix:
#         language: ["python"]

#     steps:
#       - name: Checkout repository
#         uses: actions/checkout@v2

#       # Initializes the CodeQL tools for scanning.
#       - name: Initialize CodeQL
#         uses: github/codeql-action/init@v1
#         with:
#           languages: ${{ matrix.language }}

#       - name: Autobuild
#         uses: github/codeql-action/autobuild@v1

#       - name: Perform CodeQL Analysis
#         uses: github/codeql-action/analyze@v1
