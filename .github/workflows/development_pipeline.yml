# Pipeline runs on all pull request and pushes to dev.
name: Development Pipeline
# on:
#   push:
#     branches: [ dev ]
#   pull_request:
#     branches: [ dev ]
on:  workflow_dispatch

jobs:
#     Runs Integration Tests w/ Cypress
  Integration-Tests:
    runs-on: ubuntu-latest
    services:
      backend:
        image: ghcr.io/rropen/sfm_backend:latest
        credentials:
          username: ${{ github.repository_owner }}
          password: ${{ secrets.CONTAINER_PAT }}
        ports: 
          - 8181:8181   
    steps:
  
    - name: Checkout Code
      uses: actions/checkout@v2
      
    - name: Setup npmrc
      run: echo "@rrglobal:registry=https://npm.pkg.github.com//npm.pkg.github.com/:_authToken=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" > .npmrc
    - name: Setup Node
      uses: actions/setup-node@v2
      with:
        always-auth: true
        node-version: "14"
        scope: '@rrglobal'
        registry-url: 'https://npm.pkg.github.com/npm.pkg.github.com/'
      env:
        NODE_AUTH_TOKEN: ${{ secrets.VUE_COBALT_PAT }}

    - name: Get yarn cache directory path
      id: yarn-cache-dir-path
      run: echo "::set-output name=dir::$(yarn cache dir)"

    - uses: actions/cache@v2
      id: yarn-cache
      with:
        path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
        key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
        restore-keys: |
          ${{ runner.os }}-yarn-
          
      
    - name: Install Dependencies
      working-directory: src/frontend
      run: yarn --prefer-offline
      env:
        NODE_AUTH_TOKEN: ${{ secrets.VUE_COBALT_PAT }}

    - name: Cypress Integration Tests
      working-directory: src/frontend
      run: yarn cy
